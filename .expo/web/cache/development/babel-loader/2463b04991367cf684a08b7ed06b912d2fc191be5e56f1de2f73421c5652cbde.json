{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FirebaseApp, initializeApp } from \"firebase/app\";\nimport { getDatabase, onValue, ref as sRef, set, remove } from \"firebase/database\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBZoCJQgmwqXltZbBWmkZ54stBlT6jf4Gs\",\n  authDomain: \"restoapp-2e79a.firebaseapp.com\",\n  databaseURL: \"https://restoapp-2e79a-default-rtdb.firebaseio.com\",\n  projectId: \"restoapp-2e79a\",\n  storageBucket: \"restoapp-2e79a.appspot.com\",\n  messagingSenderId: \"300896535259\",\n  appId: \"1:300896535259:web:33f41bd2627b410064c2fe\",\n  measurementId: \"G-X9RC5LH6MK\"\n};\nvar app = initializeApp(firebaseConfig);\nvar database = getDatabase(app);\nvar Stack = createNativeStackNavigator();\nfunction ChefScreen(_ref) {\n  var nombre = _ref.nombre;\n  var mozoToken = nombre;\n  var database = getDatabase();\n  var comandasRef = sRef(database, \"comandas\");\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    comandas = _useState2[0],\n    setComandas = _useState2[1];\n  useEffect(function () {\n    var unsubscribe = onValue(comandasRef, function (snapshot) {\n      if (snapshot.exists()) {\n        setComandas(snapshot.val());\n      } else {\n        setComandas({});\n      }\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n  var marcarComandaComoTerminada = function marcarComandaComoTerminada(comandaId) {\n    var comanda = comandas[comandaId];\n    if (comanda && !comanda.terminada) {\n      var comandaRef = sRef(database, `comandas/${comandaId}/terminada`);\n      set(comandaRef, true).then(function () {\n        var comandaEliminarRef = sRef(database, `comandas/${comandaId}`);\n        remove(comandaEliminarRef).catch(function (error) {\n          console.error('Error al eliminar la comanda:', error);\n        });\n      }).catch(function (error) {\n        console.error('Error al marcar la comanda como terminada:', error);\n      });\n    }\n  };\n  var agruparElementosPorNombre = function agruparElementosPorNombre(elementos) {\n    var agrupados = {};\n    elementos.forEach(function (elemento) {\n      var key = `${elemento.nombre}-${elemento.variante || ''}`;\n      if (agrupados[key]) {\n        agrupados[key].cantidad++;\n      } else {\n        agrupados[key] = _objectSpread(_objectSpread({}, elemento), {}, {\n          cantidad: 1\n        });\n      }\n    });\n    return Object.values(agrupados);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      borderColor: 'black',\n      borderWidth: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: 'bold'\n      },\n      children: \"Comandas:\"\n    }), _jsx(ScrollView, {\n      contentContainerStyle: {\n        alignItems: \"center\"\n      },\n      children: Object.keys(comandas).map(function (comandaId) {\n        return _jsxs(View, {\n          style: {\n            padding: 10,\n            borderColor: 'black',\n            borderWidth: 1,\n            margin: 10,\n            alignItems: \"center\"\n          },\n          children: [_jsxs(Text, {\n            style: {\n              fontSize: 18,\n              fontWeight: 'bold',\n              color: \"#00469B\"\n            },\n            children: [\"Mesa: \", comandas[comandaId].mesa]\n          }), _jsx(Text, {\n            style: {\n              fontSize: 15,\n              fontWeight: 'bold'\n            },\n            children: \"Pedido:\"\n          }), agruparElementosPorNombre(comandas[comandaId].elementos).map(function (elemento, index) {\n            return _jsxs(Text, {\n              children: [elemento.nombre, elemento.variante ? _jsxs(Text, {\n                children: [elemento.variante, \",\"]\n              }, index) : null, \" X\", elemento.cantidad]\n            }, index);\n          }), !comandas[comandaId].terminada && _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return marcarComandaComoTerminada(comandaId);\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 14,\n                fontWeight: 'bold',\n                color: \"white\",\n                backgroundColor: \"red\"\n              },\n              children: \"  Marcar como terminada  \"\n            })\n          })]\n        }, comandaId);\n      })\n    })]\n  });\n}\nexport default ChefScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","ScrollView","TouchableOpacity","FirebaseApp","initializeApp","getDatabase","onValue","ref","sRef","set","remove","createNativeStackNavigator","useNavigation","jsx","_jsx","jsxs","_jsxs","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","database","Stack","ChefScreen","_ref","nombre","mozoToken","comandasRef","_useState","_useState2","_slicedToArray","comandas","setComandas","unsubscribe","snapshot","exists","val","marcarComandaComoTerminada","comandaId","comanda","terminada","comandaRef","then","comandaEliminarRef","catch","error","console","agruparElementosPorNombre","elementos","agrupados","forEach","elemento","key","variante","cantidad","_objectSpread","Object","values","style","flex","padding","borderColor","borderWidth","justifyContent","alignItems","children","fontSize","fontWeight","contentContainerStyle","keys","map","margin","color","mesa","index","onPress","backgroundColor"],"sources":["C:/Users/octal/OneDrive/Documentos/Diseño web/proyectos/calm-apples/calm-apples/Components/Chef.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { FirebaseApp, initializeApp } from \"firebase/app\";\r\nimport { getDatabase, onValue, ref as sRef, set, remove } from \"firebase/database\";\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBZoCJQgmwqXltZbBWmkZ54stBlT6jf4Gs\",\r\n    authDomain: \"restoapp-2e79a.firebaseapp.com\",\r\n    databaseURL: \"https://restoapp-2e79a-default-rtdb.firebaseio.com\",\r\n    projectId: \"restoapp-2e79a\",\r\n    storageBucket: \"restoapp-2e79a.appspot.com\",\r\n    messagingSenderId: \"300896535259\",\r\n    appId: \"1:300896535259:web:33f41bd2627b410064c2fe\",\r\n    measurementId: \"G-X9RC5LH6MK\"\r\n};\r\n\r\nconst app: FirebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst database = getDatabase(app);\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction ChefScreen({ nombre }) {\r\n    const mozoToken = nombre;\r\n    const database = getDatabase();\r\n    const comandasRef = sRef(database, \"comandas\");\r\n\r\n    const [comandas, setComandas] = useState({});\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onValue(comandasRef, (snapshot) => {\r\n        if (snapshot.exists()) {\r\n            setComandas(snapshot.val());\r\n        } else {\r\n            setComandas({});\r\n        }\r\n        });\r\n\r\n        return () => {\r\n        unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    const marcarComandaComoTerminada = (comandaId) => {\r\n        const comanda = comandas[comandaId];\r\n        if (comanda && !comanda.terminada) {\r\n        const comandaRef = sRef(database, `comandas/${comandaId}/terminada`);\r\n        set(comandaRef, true)\r\n            .then(() => {\r\n            // Comanda marcada como terminada con éxito, ahora la eliminamos\r\n            const comandaEliminarRef = sRef(database, `comandas/${comandaId}`);\r\n            remove(comandaEliminarRef)\r\n                .catch((error) => {\r\n                console.error('Error al eliminar la comanda:', error);\r\n                });\r\n            })\r\n        .catch((error) => {\r\n            console.error('Error al marcar la comanda como terminada:', error);\r\n        });\r\n        }\r\n    };\r\n\r\n    const agruparElementosPorNombre = (elementos) => {\r\n        const agrupados = {};\r\n        \r\n        elementos.forEach((elemento) => {\r\n            const key = `${elemento.nombre}-${elemento.variante || ''}`;\r\n            if (agrupados[key]) {\r\n                agrupados[key].cantidad++;\r\n            } else {\r\n                agrupados[key] = { ...elemento, cantidad: 1 };\r\n            }\r\n        });\r\n    \r\n        return Object.values(agrupados);\r\n    };\r\n\r\n    return (\r\n    <View style={{ flex: 1, padding: 20, borderColor: 'black', borderWidth: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <Text style={{ fontSize: 24, fontWeight: 'bold' }}>Comandas:</Text>\r\n        <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n            {Object.keys(comandas).map((comandaId) => (\r\n            <View key={comandaId} style={{ padding: 10, borderColor: 'black', borderWidth: 1, margin: 10, alignItems: \"center\" }}>\r\n                <Text style={{ fontSize: 18, fontWeight: 'bold', color: \"#00469B\" }}>Mesa: {comandas[comandaId].mesa}</Text>\r\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>Pedido:</Text>\r\n                {agruparElementosPorNombre(comandas[comandaId].elementos).map((elemento, index) => (\r\n                <Text key={index}>\r\n                    {elemento.nombre}{elemento.variante ? (\r\n                    <Text key={index}>{elemento.variante},</Text>\r\n                ) : null} X{elemento.cantidad}\r\n                </Text>\r\n                ))}\r\n                {!comandas[comandaId].terminada && (\r\n                <TouchableOpacity onPress={() => marcarComandaComoTerminada(comandaId)}>\r\n                    <Text style={{ fontSize: 14, fontWeight: 'bold', color: \"white\", backgroundColor: \"red\" }}>  Marcar como terminada  </Text>\r\n                </TouchableOpacity>\r\n                )}\r\n            </View>\r\n            ))}\r\n        </ScrollView>\r\n    </View>\r\n    );\r\n}  \r\n\r\nexport default ChefScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}